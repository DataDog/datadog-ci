# This workflow will do a clean install of node dependencies, build the source code and run tests

name: Continuous Integration

on: push

jobs:
  test-cache-master-no-ci-vis:
    name: Test cache for current release (no ci vis)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: yarn install
      - run: yarn test
      - name: Run unit tests again (cache should kick in)
        run: yarn test

  test-cache-change-ci-vis:
    name: Test cache for branch (ci vis enabled)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: yarn install
      - name: Install tracer's branch
        run: yarn add --dev dd-trace@3.29.1
      - run: yarn test
        env:
          CI: true
          DD_SERVICE: datadog-ci-tests
          DD_CIVISIBILITY_AGENTLESS_ENABLED: 1
          DD_API_KEY: ${{ secrets.DATADOG_API_KEY_MAIN_ACCOUNT }}
          DD_APP_KEY: ${{ secrets.DATADOG_APP_KEY_MAIN_ACCOUNT }}
          DD_CIVISIBILITY_ITR_ENABLED: 0
          DD_ENV: ci
          NODE_OPTIONS: -r dd-trace/ci/init
      - name: Run unit tests again (cache should kick in)
        run: yarn test
        env:
          CI: true
          DD_SERVICE: datadog-ci-tests
          DD_CIVISIBILITY_AGENTLESS_ENABLED: 1
          DD_API_KEY: ${{ secrets.DATADOG_API_KEY_MAIN_ACCOUNT }}
          DD_APP_KEY: ${{ secrets.DATADOG_APP_KEY_MAIN_ACCOUNT }}
          DD_CIVISIBILITY_ITR_ENABLED: 0
          DD_ENV: ci
          NODE_OPTIONS: -r dd-trace/ci/init

  test-cache-clean-checkout:
    name: Test cache for branch (clean checkout, no ci vis)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: yarn install
      - name: Show cache folder before tests
        run: | 
          cd "$(node get-config.js)"
          ls
          cd $GITHUB_WORKSPACE     
      - name: Run unit tests 
        run: yarn test
      - name: Show cache folder after tests
        run: | 
          cd "$(node get-config.js)"
          ls
          cd $GITHUB_WORKSPACE
      - name: Run unit tests (before deleting files - cache should kick in)
        run: yarn test
      - name: Remove repository to clone it again
        run: |
          rm -rf ./*
          ls
      - name: Checkout repository again
        uses: actions/checkout@v3
      - run: yarn install
      - name: Run unit tests again (does cache kick in)
        run: yarn test