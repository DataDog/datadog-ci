name: Publish package on NPM

on:
  push:
    tags:
      - v* # Any version tag

permissions:
  contents: write # Required for the draft release

jobs:
  create-draft-release:
    runs-on: ubuntu-latest
    outputs:
      release-id: ${{ steps.draft-release.outputs.result }}
    steps:
      - name: Create a draft release
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        id: draft-release
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: release } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: '${{ github.ref_name }}',
              name: '${{ github.ref_name }}',
              draft: true,
              prerelease: false,
              generate_release_notes: true,
            })

            const editReleaseLink = release.html_url.replace('datadog-ci/releases/tag/', 'datadog-ci/releases/edit/')

            await core.summary
              .addHeading('Draft release created')
              .addRaw('Please go to the link below, copy the release notes and paste them in your release PR.', true)
              .addBreak()
              .addBreak()
              .addLink('Edit ${{ github.ref_name }} (draft)', editReleaseLink)
              .write()

            return release.id

  build-binary-ubuntu:
    runs-on: ubuntu-latest
    needs: create-draft-release
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - name: Install node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 22.19.0
      - name: Install project dependencies
        run: yarn install --immutable
      - name: Bundle library
        run: yarn build
      - name: Create standalone binary
        run: yarn dist-standalone -t node22-linux-x64 -o datadog-ci_linux-x64
      - name: Remove src and dist folders to check that binary can stand alone
        run: yarn rimraf --glob 'packages/*/{src,dist}'
      - name: Test generated standalone binary
        run: yarn dist-standalone:test
      - name: Upload release asset
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require("fs").promises

            github.rest.repos.uploadReleaseAsset({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: "${{ needs.create-draft-release.outputs.release-id }}",
              name: 'datadog-ci_linux-x64',
              data: await fs.readFile('./datadog-ci_linux-x64'),
            })

  build-binary-ubuntu-arm:
    runs-on:
      group: ARM LINUX SHARED
      labels: arm-4core-linux
    needs: create-draft-release
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - name: Install node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 22.19.0
      - run: npm install -g yarn
        name: Install Yarn # Yarn is not installed by default in this runner
      - name: Install project dependencies
        run: yarn install --immutable
      - name: Bundle library
        run: yarn build
      - name: Create standalone binary
        run: yarn dist-standalone -t node22-linux-arm64 -o datadog-ci_linux-arm64
      - name: Remove src and dist folders to check that binary can stand alone
        run: yarn rimraf --glob 'packages/*/{src,dist}'
      - name: Test generated standalone binary
        run: yarn dist-standalone:test
      - name: Upload release asset
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require("fs").promises

            github.rest.repos.uploadReleaseAsset({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: "${{ needs.create-draft-release.outputs.release-id }}",
              name: 'datadog-ci_linux-arm64',
              data: await fs.readFile('./datadog-ci_linux-arm64'),
            })

  build-binary-windows:
    runs-on: windows-latest
    needs: create-draft-release
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - name: Install node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 22.19.0
      - name: Install project dependencies
        run: yarn install --immutable
      - name: Bundle library
        run: yarn build
      - name: Create standalone binary
        run: yarn dist-standalone -t node22-win-x64 -o datadog-ci_win-x64
      - name: Remove src and dist folders to check that binary can stand alone
        run: yarn rimraf --glob 'packages/*/{src,dist}'
      - name: Test generated standalone binary
        run: yarn dist-standalone:test
      - name: Upload release asset
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require("fs").promises

            github.rest.repos.uploadReleaseAsset({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: "${{ needs.create-draft-release.outputs.release-id }}",
              name: 'datadog-ci_win-x64',
              data: await fs.readFile('./datadog-ci_win-x64.exe'),
            })

  build-binary-macos:
    # `macos-latest-large` is an x64 image, and we need it to run the standalone tests
    # https://github.com/actions/runner-images#available-images
    runs-on: macos-latest-large
    needs: create-draft-release
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - name: Install node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 22.19.0
      - name: Install project dependencies
        run: yarn install --immutable
      - name: Bundle library
        run: yarn build
      - name: Create standalone binary
        run: yarn dist-standalone -t node22-macos-x64 -o datadog-ci_darwin-x64
      - name: Remove src and dist folders to check that binary can stand alone
        run: yarn rimraf --glob 'packages/*/{src,dist}'
      - name: Test generated standalone binary
        run: yarn dist-standalone:test
      - name: Upload release asset
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require("fs").promises

            github.rest.repos.uploadReleaseAsset({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: "${{ needs.create-draft-release.outputs.release-id }}",
              name: 'datadog-ci_darwin-x64',
              data: await fs.readFile('./datadog-ci_darwin-x64'),
            })

  build-binary-macos-arm:
    runs-on: macos-latest
    needs: create-draft-release
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - name: Install node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 22.19.0
      - name: Install project dependencies
        run: yarn install --immutable
      - name: Bundle library
        run: yarn build
      - name: Create standalone binary
        run: yarn dist-standalone -t node22-macos-arm64 -o datadog-ci_darwin-arm64
      - name: Remove src and dist folders to check that binary can stand alone
        run: yarn rimraf --glob 'packages/*/{src,dist}'
      - name: Test generated standalone binary
        run: yarn dist-standalone:test
      - name: Upload release asset
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require("fs").promises

            github.rest.repos.uploadReleaseAsset({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: "${{ needs.create-draft-release.outputs.release-id }}",
              name: 'datadog-ci_darwin-arm64',
              data: await fs.readFile('./datadog-ci_darwin-arm64'),
            })

  # Requires an approval
  npm-publish:
    runs-on: ubuntu-latest
    environment: npm
    needs: [build-binary-ubuntu, build-binary-windows, build-binary-macos]
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 22.19.0
      - run: yarn install --immutable
      - run: yarn publish:all
        env:
          YARN_NPM_AUTH_TOKEN: ${{ secrets.YARN_NPM_AUTH_TOKEN }}

  bump-ci-integrations:
    name: Bump datadog-ci in integration
    runs-on: ubuntu-latest
    needs: npm-publish
    strategy:
      fail-fast: false
      matrix:
        integration-repo:
          - synthetics-ci-github-action
          - datadog-ci-azure-devops
          - synthetics-test-automation-circleci-orb
          - synthetics-test-automation-bitrise-step-run-tests
          - synthetics-test-automation-bitrise-step-upload-application
          - synthetics-batch-smoke-tester
    steps:
      - name: Get GitHub App token
        id: get-token
        uses: actions/create-github-app-token@a8d616148505b5069dccd32f177bb87d7f39123b # v2.1.1
        with:
          app-id: ${{ secrets.RELEASE_AUTOMATION_GITHUB_APP_ID }}
          private-key: ${{ secrets.RELEASE_AUTOMATION_GITHUB_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
          repositories: ${{ matrix.integration-repo }}
      - name: Create bump datadog-ci PR
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          github-token: ${{ steps.get-token.outputs.token }}
          script: |
            const tagName = '${{ github.event.release.tag_name }}'.replace('v', '')

            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: '${{ matrix.integration-repo }}',
              workflow_id: 'bump-datadog-ci.yml',
              ref: 'main',
              inputs: {
                datadog_ci_version: tagName,
              },
            })
