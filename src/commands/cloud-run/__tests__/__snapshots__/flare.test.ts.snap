// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`cloud-run flare checkAuthentication prints instructions on how to authenticate when authentication fails 1`] = `
"
üê∂ Generating Cloud Run flare to send your configuration to Datadog...

üîë Verifying GCP credentials...

[Error] Unable to authenticate with GCP.

To authenticate with GCP, please follow these steps:
1. If you haven't already, install the Google Cloud SDK: https://cloud.google.com/sdk/docs/install
2. Run \\"gcloud auth application-default login\\" and follow the prompts in your browser to log in.
3. After logging in, run the \`datadog-ci cloud-run flare\` command again.
"
`;

exports[`cloud-run flare generateInsightsFile prints a warning when generateInsightsFile() errors 1`] = `
"
üê∂ Generating Cloud Run flare to send your configuration to Datadog...

üîë Verifying GCP credentials...
GCP credentials verified!

üîç Fetching service configuration...

{
  name: 'projects/mock-project/locations/us-east1/services/mock-service',
  description: 'description',
  uri: 'https://mock-service-abc12345-ue.a.run.app',
  template: {
    containers: [
      {
        env: [
          {
            name: 'DD_API_KEY',
            value: '02**********33bd',
            values: 'value'
          },
          { name: 'DD_TRACE_ENABLED', value: 'true', values: 'value' },
          { name: 'DD_SITE', value: 'datad0g.com', values: 'value' }
        ],
        image: 'gcr.io/datadog-sandbox/nicholas-hulston-docker-test'
      }
    ],
    someData: 'data'
  }
}

üíæ Saving configuration...
[!] Unable to create INSIGHTS.md file. Some error


üöÄ Sending to Datadog Support...

‚úÖ Successfully sent flare file to Datadog Support!
"
`;

exports[`cloud-run flare generateInsightsFile should call writeFile with correct content when isDryRun is false 1`] = `
"# Flare Insights

_Autogenerated file from \`cloud-run flare\`_  

## Cloud Run Service Configuration
**Service Name**: \`mock-service\`  
**Location**: \`us-east1\`  
**Project**: \`mock-project\`  
**Description**: \`description\`  
**URI**: \`https://mock-service-abc12345-ue.a.run.app\`  
**Environment Variables**:
- \`DD_API_KEY\`: \`02**********33bd\`
- \`DD_TRACE_ENABLED\`: \`true\`
- \`DD_SITE\`: \`datad0g.com\`

 ## CLI
**Run Location**: \`mock-folder\`  
**CLI Version**: \`2.18.0\`  
**Timestamp**: \`2023-01-01 00:00:00.000 UTC\`  "
`;

exports[`cloud-run flare generateInsightsFile should call writeFile with correct content when isDryRun is true 1`] = `
"# Flare Insights

_Autogenerated file from \`cloud-run flare\`_  
_This command was run in dry mode._

## Cloud Run Service Configuration
**Service Name**: \`mock-service\`  
**Location**: \`us-east1\`  
**Project**: \`mock-project\`  
**Description**: \`description\`  
**URI**: \`https://mock-service-abc12345-ue.a.run.app\`  
**Environment Variables**:
- \`DD_API_KEY\`: \`02**********33bd\`
- \`DD_TRACE_ENABLED\`: \`true\`
- \`DD_SITE\`: \`datad0g.com\`

 ## CLI
**Run Location**: \`mock-folder\`  
**CLI Version**: \`2.18.0\`  
**Timestamp**: \`2023-01-01 00:00:00.000 UTC\`  "
`;

exports[`cloud-run flare getCloudRunServiceConfig prints config when running as a dry run 1`] = `
"
[Dry Run] üê∂ Generating Cloud Run flare to send your configuration to Datadog...

üîë Verifying GCP credentials...
GCP credentials verified!

üîç Fetching service configuration...

{
  name: 'projects/mock-project/locations/us-east1/services/mock-service',
  description: 'description',
  uri: 'https://mock-service-abc12345-ue.a.run.app',
  template: {
    containers: [
      {
        env: [
          {
            name: 'DD_API_KEY',
            value: '02**********33bd',
            values: 'value'
          },
          { name: 'DD_TRACE_ENABLED', value: 'true', values: 'value' },
          { name: 'DD_SITE', value: 'datad0g.com', values: 'value' }
        ],
        image: 'gcr.io/datadog-sandbox/nicholas-hulston-docker-test'
      }
    ],
    someData: 'data'
  }
}

üíæ Saving configuration...
‚Ä¢ Saved insights file to ./INSIGHTS.md

üö´ The flare files were not sent as it was executed in dry run mode.
‚ÑπÔ∏è Your output files are located at: mock-folder/.datadog-ci

"
`;

exports[`cloud-run flare getCloudRunServiceConfig stops and prints error when getCloudRunServiceConfig fails 1`] = `
"
üê∂ Generating Cloud Run flare to send your configuration to Datadog...

üîë Verifying GCP credentials...
GCP credentials verified!

üîç Fetching service configuration...
[Error] Unable to fetch service configuration: MOCK ERROR: Some API error
"
`;

exports[`cloud-run flare maskConfig should mask a Cloud Run config correctly 1`] = `
Object {
  "description": "description",
  "name": "projects/mock-project/locations/us-east1/services/mock-service",
  "template": Object {
    "containers": Array [
      Object {
        "env": Array [
          Object {
            "name": "DD_API_KEY",
            "value": "02**********33bd",
            "values": "value",
          },
          Object {
            "name": "DD_TRACE_ENABLED",
            "value": "true",
            "values": "value",
          },
          Object {
            "name": "DD_SITE",
            "value": "datad0g.com",
            "values": "value",
          },
        ],
        "image": "gcr.io/datadog-sandbox/nicholas-hulston-docker-test",
      },
    ],
    "someData": "data",
  },
  "uri": "https://mock-service-abc12345-ue.a.run.app",
}
`;

exports[`cloud-run flare maskConfig should not modify config if env vars are missing 1`] = `
Object {
  "description": "description",
  "name": "projects/mock-project/locations/us-east1/services/mock-service",
  "template": Object {
    "someData": "data",
  },
  "uri": "https://mock-service-abc12345-ue.a.run.app",
}
`;

exports[`cloud-run flare prints correct headers prints dry-run header 1`] = `
"
[Dry Run] üê∂ Generating Cloud Run flare to send your configuration to Datadog...
[Error] No service specified. [-s,--service]
[Error] No project specified. [-p,--project]
[Error] No region specified. [-r,--region]
[Error] No case ID specified. [-c,--case-id]
[Error] No email specified. [-e,--email]
"
`;

exports[`cloud-run flare prints correct headers prints non-dry-run header 1`] = `
"
üê∂ Generating Cloud Run flare to send your configuration to Datadog...
[Error] No service specified. [-s,--service]
[Error] No project specified. [-p,--project]
[Error] No region specified. [-r,--region]
[Error] No case ID specified. [-c,--case-id]
[Error] No email specified. [-e,--email]
"
`;

exports[`cloud-run flare prompts for confirmation before sending does not send when user answers prompt with no 1`] = `
"
üê∂ Generating Cloud Run flare to send your configuration to Datadog...

üîë Verifying GCP credentials...
GCP credentials verified!

üîç Fetching service configuration...

{
  name: 'projects/mock-project/locations/us-east1/services/mock-service',
  description: 'description',
  uri: 'https://mock-service-abc12345-ue.a.run.app',
  template: {
    containers: [
      {
        env: [
          {
            name: 'DD_API_KEY',
            value: '02**********33bd',
            values: 'value'
          },
          { name: 'DD_TRACE_ENABLED', value: 'true', values: 'value' },
          { name: 'DD_SITE', value: 'datad0g.com', values: 'value' }
        ],
        image: 'gcr.io/datadog-sandbox/nicholas-hulston-docker-test'
      }
    ],
    someData: 'data'
  }
}

üíæ Saving configuration...
‚Ä¢ Saved insights file to ./INSIGHTS.md


üö´ The flare files were not sent based on your selection.
‚ÑπÔ∏è Your output files are located at: mock-folder/.datadog-ci

"
`;

exports[`cloud-run flare prompts for confirmation before sending sends when user answers prompt with yes 1`] = `
"
üê∂ Generating Cloud Run flare to send your configuration to Datadog...

üîë Verifying GCP credentials...
GCP credentials verified!

üîç Fetching service configuration...

{
  name: 'projects/mock-project/locations/us-east1/services/mock-service',
  description: 'description',
  uri: 'https://mock-service-abc12345-ue.a.run.app',
  template: {
    containers: [
      {
        env: [
          {
            name: 'DD_API_KEY',
            value: '02**********33bd',
            values: 'value'
          },
          { name: 'DD_TRACE_ENABLED', value: 'true', values: 'value' },
          { name: 'DD_SITE', value: 'datad0g.com', values: 'value' }
        ],
        image: 'gcr.io/datadog-sandbox/nicholas-hulston-docker-test'
      }
    ],
    someData: 'data'
  }
}

üíæ Saving configuration...
‚Ä¢ Saved insights file to ./INSIGHTS.md


üöÄ Sending to Datadog Support...

‚úÖ Successfully sent flare file to Datadog Support!
"
`;

exports[`cloud-run flare validates required flags prints error when no API key in env variables 1`] = `
"
üê∂ Generating Cloud Run flare to send your configuration to Datadog...
[Error] No Datadog API key specified. Set an API key with the DATADOG_API_KEY environment variable.
"
`;

exports[`cloud-run flare validates required flags prints error when no case ID specified 1`] = `
"
üê∂ Generating Cloud Run flare to send your configuration to Datadog...
[Error] No case ID specified. [-c,--case-id]
"
`;

exports[`cloud-run flare validates required flags prints error when no email specified 1`] = `
"
üê∂ Generating Cloud Run flare to send your configuration to Datadog...
[Error] No email specified. [-e,--email]
"
`;

exports[`cloud-run flare validates required flags prints error when no project specified 1`] = `
"
üê∂ Generating Cloud Run flare to send your configuration to Datadog...
[Error] No project specified. [-p,--project]
"
`;

exports[`cloud-run flare validates required flags prints error when no region specified 1`] = `
"
üê∂ Generating Cloud Run flare to send your configuration to Datadog...
[Error] No region specified. [-r,--region]
"
`;

exports[`cloud-run flare validates required flags prints error when no service specified 1`] = `
"
üê∂ Generating Cloud Run flare to send your configuration to Datadog...
[Error] No service specified. [-s,--service]
"
`;

exports[`cloud-run flare validates required flags runs successfully with all required options specified 1`] = `
"
üê∂ Generating Cloud Run flare to send your configuration to Datadog...

üîë Verifying GCP credentials...
GCP credentials verified!

üîç Fetching service configuration...

{
  name: 'projects/mock-project/locations/us-east1/services/mock-service',
  description: 'description',
  uri: 'https://mock-service-abc12345-ue.a.run.app',
  template: {
    containers: [
      {
        env: [
          {
            name: 'DD_API_KEY',
            value: '02**********33bd',
            values: 'value'
          },
          { name: 'DD_TRACE_ENABLED', value: 'true', values: 'value' },
          { name: 'DD_SITE', value: 'datad0g.com', values: 'value' }
        ],
        image: 'gcr.io/datadog-sandbox/nicholas-hulston-docker-test'
      }
    ],
    someData: 'data'
  }
}

üíæ Saving configuration...
‚Ä¢ Saved insights file to ./INSIGHTS.md


üöÄ Sending to Datadog Support...

‚úÖ Successfully sent flare file to Datadog Support!
"
`;

exports[`cloud-run flare validates required flags uses API key ENV variable and runs as expected 1`] = `
"
üê∂ Generating Cloud Run flare to send your configuration to Datadog...

üîë Verifying GCP credentials...
GCP credentials verified!

üîç Fetching service configuration...

{
  name: 'projects/mock-project/locations/us-east1/services/mock-service',
  description: 'description',
  uri: 'https://mock-service-abc12345-ue.a.run.app',
  template: {
    containers: [
      {
        env: [
          {
            name: 'DD_API_KEY',
            value: '02**********33bd',
            values: 'value'
          },
          { name: 'DD_TRACE_ENABLED', value: 'true', values: 'value' },
          { name: 'DD_SITE', value: 'datad0g.com', values: 'value' }
        ],
        image: 'gcr.io/datadog-sandbox/nicholas-hulston-docker-test'
      }
    ],
    someData: 'data'
  }
}

üíæ Saving configuration...
‚Ä¢ Saved insights file to ./INSIGHTS.md


üöÄ Sending to Datadog Support...

‚úÖ Successfully sent flare file to Datadog Support!
"
`;

exports[`cloud-run flare validates required flags uses API key ENV variable and runs as expected 2`] = `
"
üê∂ Generating Cloud Run flare to send your configuration to Datadog...

üîë Verifying GCP credentials...
GCP credentials verified!

üîç Fetching service configuration...

{
  name: 'projects/mock-project/locations/us-east1/services/mock-service',
  description: 'description',
  uri: 'https://mock-service-abc12345-ue.a.run.app',
  template: {
    containers: [
      {
        env: [
          {
            name: 'DD_API_KEY',
            value: '02**********33bd',
            values: 'value'
          },
          { name: 'DD_TRACE_ENABLED', value: 'true', values: 'value' },
          { name: 'DD_SITE', value: 'datad0g.com', values: 'value' }
        ],
        image: 'gcr.io/datadog-sandbox/nicholas-hulston-docker-test'
      }
    ],
    someData: 'data'
  }
}

üíæ Saving configuration...
‚Ä¢ Saved insights file to ./INSIGHTS.md


üöÄ Sending to Datadog Support...

‚úÖ Successfully sent flare file to Datadog Support!

üê∂ Generating Cloud Run flare to send your configuration to Datadog...

üîë Verifying GCP credentials...
GCP credentials verified!

üîç Fetching service configuration...

{
  name: 'projects/mock-project/locations/us-east1/services/mock-service',
  description: 'description',
  uri: 'https://mock-service-abc12345-ue.a.run.app',
  template: {
    containers: [
      {
        env: [
          {
            name: 'DD_API_KEY',
            value: '02**********33bd',
            values: 'value'
          },
          { name: 'DD_TRACE_ENABLED', value: 'true', values: 'value' },
          { name: 'DD_SITE', value: 'datad0g.com', values: 'value' }
        ],
        image: 'gcr.io/datadog-sandbox/nicholas-hulston-docker-test'
      }
    ],
    someData: 'data'
  }
}

üíæ Saving configuration...
‚Ä¢ Saved insights file to ./INSIGHTS.md


üöÄ Sending to Datadog Support...

‚úÖ Successfully sent flare file to Datadog Support!
"
`;
